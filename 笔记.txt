一.创建版本库
1.添加文件到Git仓库，分两步：
第一步，使用命令git add <file>，注意，可反复多次使用，添加多个文件；
第二步，使用命令git commit -m""，完成。

2.git status命令可以让我们时刻掌握仓库当前的状态
3.git diff xxx   查看xxx文件的具体变动(不输入xxx则默认为查看当前目录所有变动)
4.git log 历史提交日志（如果加上 --pretty=oneline则显示为精简版）回车后有版本号的显示
5.git reset --hard HEAD^^^^^ 穿梭版本 
（在Git中，用HEAD表示当前版本，上一个版本就是HEAD^，上上一个版本就是HEAD^^，往上100个版本写100个^数不过来，可以写成HEAD~100。）
(穿梭回以前版本后发现原来版本不在日志中了，这是如果还没又关闭窗口，便还可以恢复。恢复需要用到其当时的commit id)(git reset --hard commit_id)
6.git reflog 查看我的每一次记录
7.Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支master，以及指向master的一个指针叫HEAD。
用git add把文件添加进去，实际上就是把文件修改添加到暂存区；
用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。
我们创建Git版本库时，Git自动为我们创建了唯一一个master分支，所以，现在，git commit就是往master分支上提交更改。
8.Git管理的是修改，而不是文件
9.git diff HEAD -- xxx 可查看当前文件和版本库里最新版的差别
10.git checkout -- xxx 把xxx文件在工作区的修改全部撤销
11.git reset HEAD xxx 把暂存区的修改撤销掉，重新放回工作区
12.rm 工作区中文件删除指令，后加文件名
13.git rm xxx 版本库中文件删除指令
